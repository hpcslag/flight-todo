{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/list-manager/list-manager.component.css","webpack:///./src/app/list-manager/list-manager.component.html","webpack:///./src/app/list-manager/list-manager.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\r\\n    <div class=\\\"outer-container\\\">\\r\\n        <div id=\\\"information\\\">\\r\\n            <form action=\\\"#\\\" #f=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\r\\n                <div id=\\\"od-sec\\\">\\r\\n                    <div class=\\\"autocomplete\\\"><input class=\\\"f-input\\\" id=\\\"origin\\\" [(ngModel)]=\\\"flight.origin\\\" placeholder=\\\"Origin\\\" (keyup)=\\\"flight.origin=flight.origin.toUpperCase()\\\" name=\\\"origin\\\" required/></div>\\r\\n                    <div class=\\\"autocomplete\\\"><input class=\\\"f-input\\\" id=\\\"dest\\\" [(ngModel)]=\\\"flight.dest\\\" placeholder=\\\"Destination\\\" (keyup)=\\\"flight.dest=flight.dest.toUpperCase()\\\" name=\\\"dest\\\" required/></div>\\r\\n                  </div>\\r\\n\\r\\n                <div id=\\\"sel-datetime\\\">\\r\\n                    <label><p>Select Date-Time</p></label>\\r\\n                    <input type=\\\"date\\\" class=\\\"f-input sel sel-date\\\" [(ngModel)]=\\\"flight.date\\\" placeholder=\\\"Date\\\" name=\\\"date\\\">\\r\\n                    <input type=\\\"time\\\" class=\\\"f-input sel\\\" placeholder=\\\"Time-start\\\" [(ngModel)]=\\\"flight.tstart\\\" name=\\\"tstart\\\">\\r\\n                    <input type=\\\"time\\\" class=\\\"f-input sel\\\" placeholder=\\\"Time-end\\\" [(ngModel)]=\\\"flight.tend\\\" style=\\\"margin-left: 5px;\\\" name=\\\"tend\\\">\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div id=\\\"travel-type\\\">\\r\\n                    <label class=\\\"control control--radio\\\">\\r\\n                      <input type=\\\"radio\\\" name=\\\"travel-type\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"flight.isoutbound\\\" name=\\\"isoutbound\\\" checked> Outbound\\r\\n                      <div class=\\\"control__indicator\\\"></div>\\r\\n                    </label>\\r\\n                    <label class=\\\"control control--radio\\\">\\r\\n                      <input type=\\\"radio\\\" name=\\\"travel-type\\\" [value]=\\\"false\\\" [(ngModel)]=\\\"flight.isoutbound\\\" name=\\\"isoutbound\\\"> Return\\r\\n                      <div class=\\\"control__indicator\\\"></div>\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <input type=\\\"number\\\" min-value=\\\"0\\\" class=\\\"f-input price-sec\\\" [(ngModel)]=\\\"flight.price\\\" placeholder=\\\"Price\\\" name=\\\"price\\\">\\r\\n\\r\\n                <div class=\\\"add-data\\\">\\r\\n                    <svg height=\\\"40px\\\" width=\\\"40px\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" x=\\\"0px\\\" y=\\\"0px\\\" (click)=\\\"addNewFlight(f)\\\">\\r\\n                      <path clip-rule=\\\"evenodd\\\" d=\\\"M2,7h5v-5h2v5h5v2h-5v5h-2v-5h-5z\\\" fill-rule=\\\"evenodd\\\"></path>\\r\\n                    </svg>\\r\\n                </div>\\r\\n            </form>\\r\\n            <div id=\\\"code\\\">\\r\\n                <p>Standard: ICAO.</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- list-manager -->\\r\\n    <div class=\\\"pick-sec\\\">\\r\\n        <div class=\\\"side\\\">\\r\\n            <h1 class=\\\"outbound-date\\\">Outbound</h1>\\r\\n            <div class=\\\"date-sec\\\">\\r\\n                {{ sortByDate() }}\\r\\n                <div *ngFor=\\\"let item of filterTypeForData(TravelType.Outbound); let index = index;\\\">\\r\\n                  {{ sortByDate() }}\\r\\n                  <div *ngIf=\\\"filterTypeForData(TravelType.Outbound)[index-1] == null || (filterTypeForData(TravelType.Outbound)[index-1].datestart.toString()) != (item.datestart.toString()); else dateFilter\\\">\\r\\n                      <div class=\\\"flight-date\\\">\\r\\n                          <p>Flight at {{ item.datestart.getFullYear() + \\\"-\\\" + (item.datestart.getMonth() + 1) + \\\"-\\\" + item.datestart.getDate() }}</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <ng-template #dateFilter>\\r\\n                  </ng-template>\\r\\n\\r\\n                    <div class=\\\"flight-sec\\\" [attr.flight_id]=\\\"item.flight_id\\\" travel_type=\\\"outbound\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\" *ngIf=\\\"item.type == TravelType.Outbound\\\">\\r\\n                        <div class=\\\"f\\\">\\r\\n                            <div class=\\\"flight-info\\\">\\r\\n                                <div class=\\\"segments\\\">\\r\\n                                    <div class=\\\"segment departure\\\">\\r\\n                                        <time>{{ item.from }}</time>\\r\\n                                        <span class=\\\"airport\\\">{{ item.datestart.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true, timeZoneName:'short' })}}</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"divider adaptive\\\">\\r\\n                                        <span class=\\\"plane\\\"></span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"segment destination\\\">\\r\\n                                        <time>{{ item.to }}</time>\\r\\n                                        <span class=\\\"airport\\\">{{ item.dateend.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true, timeZoneName:'short' })}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"flight-duration\\\">\\r\\n                                1h 20min Length of trip\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"flight-price-sec\\\">\\r\\n                            <h1>{{ item.price }}</h1>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"delete\\\">\\r\\n                          <span (click)=\\\"deleteFlight(item.flight_id)\\\">×</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"side\\\">\\r\\n            <h1 class=\\\"return-date\\\">Return</h1>\\r\\n            <div class=\\\"date-sec\\\">\\r\\n                {{ sortByDate() }}\\r\\n                <div *ngFor=\\\"let item of filterTypeForData(TravelType.Return); let index = index;\\\">\\r\\n                  {{ sortByDate() }}\\r\\n                  <div *ngIf=\\\"filterTypeForData(TravelType.Outbound)[index-1] == null || (filterTypeForData(TravelType.Outbound)[index-1].datestart.toString()) != (item.datestart.toString()); else dateFilter\\\">\\r\\n                      <div class=\\\"flight-date\\\">\\r\\n                          <p>Flight at {{ item.datestart.getFullYear() + \\\"-\\\" + (item.datestart.getMonth()+1) + \\\"-\\\" + item.datestart.getDate() }}</p>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <ng-template #dateFilter>\\r\\n                  </ng-template>\\r\\n\\r\\n                    <div class=\\\"flight-sec\\\" [attr.flight_id]=\\\"item.flight_id\\\" travel_type=\\\"return\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\">\\r\\n                        <div class=\\\"f\\\">\\r\\n                            <div class=\\\"flight-info\\\">\\r\\n                                <div class=\\\"segments\\\">\\r\\n                                    <div class=\\\"segment departure\\\">\\r\\n                                        <time>{{ item.from }}</time>\\r\\n                                        <span class=\\\"airport\\\">{{ item.datestart.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true, timeZoneName:'short' })}}</span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"divider adaptive\\\">\\r\\n                                        <span class=\\\"plane\\\"></span>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"segment destination\\\">\\r\\n                                        <time>{{ item.to }}</time>\\r\\n                                        <span class=\\\"airport\\\">{{ item.dateend.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true, timeZoneName:'short' })}}</span>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"flight-duration\\\">\\r\\n                                {{ getDistanceTime(item.dateend, item.datestart) }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"flight-price-sec\\\">\\r\\n                            <h1>{{ item.price }}</h1>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"delete\\\">\\r\\n                          <span (click)=\\\"deleteFlight(item.flight_id)\\\">×</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, NgModule, OnInit } from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\n\r\nenum travel_type {\r\n  Outbound,\r\n  Return\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\n\r\nexport class AppComponent implements OnInit{\r\n\r\n  TravelType = travel_type\r\n\r\n  title = 'flight-todo'\r\n\r\n  flight: any = {\r\n    origin : \"\",\r\n    dest : \"\",\r\n    date : null,\r\n    tstart : null,\r\n    tend: null,\r\n    isoutbound: true,\r\n    price: 0\r\n  };\r\n\r\n  id_count: number = 0;\r\n\r\n  data = [\r\n    {\r\n      flight_id: 1,\r\n      from: \"KHH\",\r\n      to: \"HKG\",\r\n      datestart: new Date(),\r\n      dateend: new Date(),\r\n      type: travel_type.Outbound,\r\n      price: 9600\r\n    },\r\n    {\r\n      flight_id: 2,\r\n      from: \"KIX\",\r\n      to: \"TPE\",\r\n      datestart: new Date(\"2019/03/14\"),\r\n      dateend: new Date(\"2019/03/14\"),\r\n      type: travel_type.Outbound,\r\n      price: 3100\r\n    },\r\n    {\r\n      flight_id: 3,\r\n      from: \"TLV\",\r\n      to: \"HKG\",\r\n      datestart: new Date(\"2019/03/04\"),\r\n      dateend: new Date(\"2019/03/04\"),\r\n      type: travel_type.Return,\r\n      price: 36600\r\n    },\r\n    {\r\n      flight_id: 4,\r\n      from: \"TLV\",\r\n      to: \"HKG\",\r\n      datestart: new Date(\"2019/03/14\"),\r\n      dateend: new Date(\"2019/03/14\"),\r\n      type: travel_type.Outbound,\r\n      price: 36600\r\n    }\r\n  ]\r\n\r\n  ngOnInit() {\r\n    window.addEventListener(\"dragEvent\",(e : any)=>{\r\n      //field change\r\n      console.log(e.detail.flight_id);\r\n      console.log(e.detail.dest_type);\r\n\r\n      this.data.map( x => {\r\n        if(x.flight_id == e.detail.flight_id){\r\n          x.type = (e.detail.dest_type == \"return\" ? travel_type.Return : travel_type.Outbound);\r\n        }\r\n      })\r\n\r\n    });\r\n\r\n    this.flight = {\r\n      origin : \"TLV\",\r\n      dest : \"HKG\",\r\n      date : \"2019-03-31\",\r\n      tstart : \"09:24\",\r\n      tend: \"11:24\",\r\n      isoutbound: true,\r\n      price: 2719\r\n    }\r\n  }\r\n\r\n  public sortByDate(): void {\r\n    this.data.sort((a, b)=>{\r\n        return a.datestart.getDate() - b.datestart.getDate();\r\n    })\r\n  }\r\n\r\n  public filterTypeForData(type: travel_type) : any[]{\r\n    if(type == travel_type.Outbound){\r\n      return this.data.filter((flight)=>{\r\n        if(flight.type == travel_type.Outbound) return flight;\r\n      })\r\n    }else{ //return\r\n      return this.data.filter((flight)=>{\r\n        if(flight.type == travel_type.Return) return flight;\r\n      })\r\n    }\r\n  }\r\n\r\n  public addNewFlight(){\r\n    let dateStart = new Date(this.flight.date);\r\n    dateStart.setHours(parseInt(this.flight.tstart.split(\":\")[0]));\r\n    dateStart.setMinutes(parseInt(this.flight.tstart.split(\":\")[1]));\r\n\r\n    let dataEnd = new Date(this.flight.date);\r\n    dataEnd.setHours(parseInt(this.flight.tend.split(\":\")[0]));\r\n    dataEnd.setMinutes(parseInt(this.flight.tend.split(\":\")[1]));\r\n\r\n    if(dateStart.toLocaleString('en-US', { hour12: true, timeZoneName:'short'}).toString() == \"PM\" && dataEnd.toLocaleString('en-US', { hour12: true, timeZoneName:'short'}).toString() == \"AM\"){\r\n      dataEnd = new Date(dataEnd.setDate(dataEnd.getDate() + 1));\r\n    }\r\n\r\n    let fdata = {\r\n      flight_id: this.id_count++,\r\n      from: this.flight.origin.toString().toUpperCase(),\r\n      to: this.flight.dest.toString().toUpperCase(),\r\n      datestart: dateStart,\r\n      dateend: dataEnd,\r\n      type: (this.flight.isoutbound ? travel_type.Outbound : travel_type.Return),\r\n      price: this.flight.price\r\n    }\r\n\r\n    this.data.push(fdata);\r\n    this.sortByDate();\r\n\r\n    this.flight = {\r\n      origin : \"\",\r\n      dest : \"\",\r\n      date : null,\r\n      tstart : null,\r\n      tend: null,\r\n      isoutbound: true,\r\n      price: 0\r\n    };\r\n  }\r\n\r\n  public deleteFlight(flight_id: number){\r\n    console.log(flight_id);\r\n    this.data.map((x, i)=>{\r\n      if(x.flight_id == flight_id){\r\n        this.data.splice(i, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  public getDistanceTime(dt1, dt2) : string{\r\n    let diff =(dt2.getTime() - dt1.getTime()) / 1000;\r\n    diff /= 60;\r\n    let totalTime = Math.abs(Math.round(diff));\r\n    return `${totalTime / 60}h ${totalTime % 60}min Length of trip`;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ListManagerComponent } from './list-manager/list-manager.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListManagerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtbWFuYWdlci9saXN0LW1hbmFnZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"pick-sec\\\">\\r\\n    <div class=\\\"side\\\">\\r\\n        <h1 class=\\\"outbound-date\\\">Outbound</h1>\\r\\n        <div class=\\\"date-sec\\\">\\r\\n            <div>\\r\\n                <div class=\\\"flight-date\\\">\\r\\n                    <p>Flight at 2019-03-24</p>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"flight-sec\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\">\\r\\n                    <div class=\\\"f\\\">\\r\\n                        <div class=\\\"flight-info\\\">\\r\\n                            <div class=\\\"segments\\\">\\r\\n                                <div class=\\\"segment departure\\\">\\r\\n                                    <time>KHH</time>\\r\\n                                    <span class=\\\"airport\\\">8:00 AM(UTC+8)</span>\\r\\n                                </div>\\r\\n                                <div class=\\\"divider adaptive\\\">\\r\\n                                    <span class=\\\"plane\\\"></span>\\r\\n                                </div>\\r\\n                                <div class=\\\"segment destination\\\">\\r\\n                                    <time>HKG</time>\\r\\n                                    <span class=\\\"airport\\\">9:25 AM(UTC+8)</span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"flight-duration\\\">\\r\\n                            1h 20min Length of trip\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"flight-price-sec\\\">\\r\\n                        <h1>6,740</h1>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"side\\\">\\r\\n        <h1 class=\\\"return-date\\\">Return</h1>\\r\\n        <div class=\\\"date-sec\\\">\\r\\n            <div class=\\\"flight-date\\\">\\r\\n                <p>Flight at 2019-03-24</p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"flight-sec\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\">\\r\\n                <div class=\\\"f\\\">\\r\\n                    <div class=\\\"flight-info\\\">\\r\\n                        <div class=\\\"segments\\\">\\r\\n                            <div class=\\\"segment departure\\\">\\r\\n                                <time>KHH</time>\\r\\n                                <span class=\\\"airport\\\">8:00 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"divider adaptive\\\">\\r\\n                                <span class=\\\"plane\\\"></span>\\r\\n                            </div>\\r\\n                            <div class=\\\"segment destination\\\">\\r\\n                                <time>HKG</time>\\r\\n                                <span class=\\\"airport\\\">9:25 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"flight-duration\\\">\\r\\n                        1h 20min Length of trip\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flight-price-sec\\\">\\r\\n                    <h1>6,740</h1>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"flight-sec\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\">\\r\\n                <div class=\\\"f\\\">\\r\\n                    <div class=\\\"flight-info\\\">\\r\\n                        <div class=\\\"segments\\\">\\r\\n                            <div class=\\\"segment departure\\\">\\r\\n                                <time>KHH</time>\\r\\n                                <span class=\\\"airport\\\">8:00 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"divider adaptive\\\">\\r\\n                                <span class=\\\"plane\\\"></span>\\r\\n                            </div>\\r\\n                            <div class=\\\"segment destination\\\">\\r\\n                                <time>HKG</time>\\r\\n                                <span class=\\\"airport\\\">9:25 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"flight-duration\\\">\\r\\n                        1h 20min Length of trip\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flight-price-sec\\\">\\r\\n                    <h1>9,340</h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"date-sec\\\">\\r\\n            <div class=\\\"flight-date\\\">\\r\\n                <p>Flight at 2019-03-24</p>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"flight-sec\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\">\\r\\n                <div class=\\\"f\\\">\\r\\n                    <div class=\\\"flight-info\\\">\\r\\n                        <div class=\\\"segments\\\">\\r\\n                            <div class=\\\"segment departure\\\">\\r\\n                                <time>KHH</time>\\r\\n                                <span class=\\\"airport\\\">8:00 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"divider adaptive\\\">\\r\\n                                <span class=\\\"plane\\\"></span>\\r\\n                            </div>\\r\\n                            <div class=\\\"segment destination\\\">\\r\\n                                <time>HKG</time>\\r\\n                                <span class=\\\"airport\\\">9:25 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"flight-duration\\\">\\r\\n                        1h 20min Length of trip\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flight-price-sec\\\">\\r\\n                    <h1>6,740</h1>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"flight-sec\\\" draggable=\\\"true\\\" ondragstart=\\\"dragstart(event)\\\" ondragover=\\\"dragover(event)\\\" ondrop=\\\"drop(event)\\\">\\r\\n                <div class=\\\"f\\\">\\r\\n                    <div class=\\\"flight-info\\\">\\r\\n                        <div class=\\\"segments\\\">\\r\\n                            <div class=\\\"segment departure\\\">\\r\\n                                <time>KHH</time>\\r\\n                                <span class=\\\"airport\\\">8:00 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"divider adaptive\\\">\\r\\n                                <span class=\\\"plane\\\"></span>\\r\\n                            </div>\\r\\n                            <div class=\\\"segment destination\\\">\\r\\n                                <time>HKG</time>\\r\\n                                <span class=\\\"airport\\\">9:25 AM(UTC+8)</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"flight-duration\\\">\\r\\n                        1h 20min Length of trip\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"flight-price-sec\\\">\\r\\n                    <h1>9,340</h1>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-list-manager',\r\n  templateUrl: './list-manager.component.html',\r\n  styleUrls: ['./list-manager.component.css']\r\n})\r\nexport class ListManagerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}